{"version":3,"sources":["components/EmployeeRow.js","components/Employees.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeRow","props","className","name","role","salary","manager","Employees","id","data","map","item","Header","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","sortInc","key","sortDec","App","state","employeedata","console","log","dataUnsorted","dataSorted","sort","order","forEach","push","indexOf","newdata","setState","reverse","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af8dcf7a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeRow(props) {\r\n  return (\r\n    <div className=\"row py-2 border-top\">\r\n      <div className=\"col-3 text-center\" >{props.name}</div>\r\n      <div className=\"col-3 text-center\" >{props.role}</div>\r\n      <div className=\"col-3 text-center\" >{props.salary}</div>\r\n      <div className=\"col-3 text-center\" >{props.manager}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeRow;","import React from \"react\";\r\nimport EmployeeRow from \"./EmployeeRow\";\r\n\r\n\r\n\r\n{/* <div className=\"row py-2 border-top\">\r\n        <div className=\"col-4 text-center\">Cras justo odio</div>\r\n        <div className=\"col-4 text-center\">Dapibus ac facilisis in</div>\r\n        <div className=\"col-4 text-center\">Morbi leo risus</div>\r\n      </div>\r\n      <div className=\"row py-2 border-top\">\r\n        <div className=\"col-4 text-center\">Cras justo odio</div>\r\n        <div className=\"col-4 text-center\">Dapibus ac facilisis in</div>\r\n        <div className=\"col-4 text-center\">Morbi leo risus</div>\r\n      </div>\r\n      <div className=\"row py-2 border-top\">\r\n        <div className=\"col-4 text-center\">Cras justo odio</div>\r\n        <div className=\"col-4 text-center\">Dapibus ac facilisis in</div>\r\n        <div className=\"col-4 text-center\">Morbi leo risus</div>\r\n      </div> */}\r\n\r\n  \r\n// <EmployeeRow {...employeedata[props.order[0]]} />\r\n//       <EmployeeRow {...employeedata[props.order[1]]} />\r\n//       <EmployeeRow {...employeedata[props.order[2]]} />\r\n\r\nfunction Employees(props) {\r\n  return (\r\n    <div className=\"mt-5 container\">\r\n      <div className=\"row py-2 border-top\">\r\n        <h4 className=\"col-3 text-center\" id=\"name\">Name</h4>\r\n        <h4 className=\"col-3 text-center\" id=\"position\">Role</h4>\r\n        <h4 className=\"col-3 text-center\" id=\"salary\">Salary</h4>\r\n        <h4 className=\"col-3 text-center\" id=\"manager\">Manager</h4>\r\n      </div>\r\n      {props.data.map(item => {\r\n        return <EmployeeRow {...item}/>\r\n      })}\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Employees;","import React from \"react\";\r\n\r\n\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <span className=\"navbar-brand mb-0 h1\">Employees</span>\r\n      </nav>\r\n\r\n      <div className=\"dropdown mt-3 ml-3\">\r\n        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Sort\r\n        </button>\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <a className=\"dropdown-item\" onClick={() => props.sortInc(props.data.map(item => {return {key: item.name, id: item.id}}))}>Name <i className=\"fas fa-arrow-up\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortDec(props.data.map(item => {return {key: item.name, id: item.id}}))}>Name <i className=\"fas fa-arrow-down\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortInc(props.data.map(item => {return {key: item.role, id: item.id}}))}>Role <i className=\"fas fa-arrow-up\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortDec(props.data.map(item => {return {key: item.role, id: item.id}}))}>Role <i className=\"fas fa-arrow-down\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortInc(props.data.map(item => {return {key: item.salary, id: item.id}}))}>Salary <i className=\"fas fa-arrow-up\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortDec(props.data.map(item => {return {key: item.salary, id: item.id}}))}>Salary <i className=\"fas fa-arrow-down\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortInc(props.data.map(item => {return {key: item.manager, id: item.id}}))}>Manager <i className=\"fas fa-arrow-up\"></i></a>\r\n          <a className=\"dropdown-item\" onClick={() => props.sortDec(props.data.map(item => {return {key: item.manager, id: item.id}}))}>Manager <i className=\"fas fa-arrow-down\"></i></a>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </header>\r\n  );\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport Employees from './components/Employees';\nimport Header from './components/Header';\nimport employeedata from \"./employeedata.json\";\n\n\nclass App extends Component {\n  state = {\n    employeedata: employeedata\n  };\n\n  // takes object of info to sort by along with ids, updates state with sorted employeedata\n  sortInc = (data) => {\n    console.log(data);\n    let dataUnsorted = data.map(item => item.key);\n    let dataSorted = data.map(item => item.key);\n    dataSorted.sort();\n    let order=[];\n    dataSorted.forEach(item => {\n      order.push(dataUnsorted.indexOf(item));\n    });\n    console.log(\"order: \"+ order);\n    let ids = data.map(item => item.id);\n    const newdata = order.map(item => {\n      return this.state.employeedata[item];\n    })\n    console.log(\"newdata: \" + newdata);\n    return this.setState({ employeedata: newdata });\n  }\n\n  sortDec = (data) => {\n    let dataUnsorted = data.map(item => item);\n    let dataSorted = data;\n    dataSorted.sort();\n    let order=[];\n    data.forEach(item => {\n      order.push(dataUnsorted.indexOf(item));\n    });\n    const newdata = order.map(item => {\n      return this.state.employeedata[item];\n    })\n    \n    return this.setState({ employeedata: newdata.reverse() });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header data={this.state.employeedata} sortDec={this.sortDec} sortInc={this.sortInc}/>\n        <Employees data={this.state.employeedata}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}